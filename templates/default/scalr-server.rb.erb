####################
 # External Routing #
####################
<% if @enable_all == true %>
  enable_all <%= @enable_all %>
  ENDPOINT = '<%= @endpoint %>'
  proto = 'http'  # Set up the SSL settings and this to 'https' to use HTTPS

  routing[:endpoint_scheme] = proto
  routing[:endpoint_host] = ENDPOINT

  routing[:graphics_scheme] = proto
  routing[:graphics_host] = ENDPOINT

  routing[:plotter_scheme] = proto
  routing[:plotter_host] = ENDPOINT
  routing[:plotter_port] = if proto == 'http' then 80 else 443 end
<% else %>

  enable_all <%= @enable_all %>

  ##########################
  # Topology Configuration #
  ##########################
  # You can use IPs for the below as well, but hostnames are preferable.
  ENDPOINT = '<%= @endpoint %>'
  MASTER_MYSQL_SERVER_HOST = '<%= @master_mysql %>'
  SLAVE_MYSQL_SERVER_HOST = '<%= @slave_mysql %>'
  APP_SERVER_1 = '<%= @appservers1 %>'
  APP_SERVER_2 = '<%= @appservers2 %>'
  WORKER_SERVER = '<%= @worker1 %>'
  INFLUXDB_SERVER = '<%= @influxdb %>'
  MEMCACHED_PORT = "11211"

  proto = 'https'  # Set up the SSL settings and this to 'https' to use HTTPS

  routing[:endpoint_scheme] = proto
  routing[:endpoint_host] = ENDPOINT

  routing[:graphics_scheme] = proto
  routing[:graphics_host] = ENDPOINT

  routing[:plotter_scheme] = proto
  routing[:plotter_host] = ENDPOINT
  routing[:plotter_port] = if proto == 'http' then 80 else 443 end

  ####################
  # Internal Routing #
  ####################

  ## In the event of a failover event, change this to SLAVE_MYSQL_SERVER_HOST
  app[:mysql_scalr_host] = MASTER_MYSQL_SERVER_HOST
  app[:mysql_scalr_port] = 3306

  ## In the event of a failover event, change this to SLAVE_MYSQL_SERVER_HOST
  app[:mysql_analytics_host] = MASTER_MYSQL_SERVER_HOST
  app[:mysql_analytics_port] = 3306

  # Memcached Servers
  app[:memcached_servers] = [APP_SERVER_1 + ':' + MEMCACHED_PORT, APP_SERVER_2 + ':' + MEMCACHED_PORT]

  # Look for the app and graphics locally as well
  proxy[:app_upstreams] = ['127.0.0.1:6000']
  proxy[:graphics_upstreams] = ['0.0.0.0:6100']
  proxy[:plotter_upstreams]  = ['0.0.0.0:6200']

  # Bind the proxy publicly
  proxy[:bind_host] = '0.0.0.0'

  # But bind locally, since it'll go through the proxy
  web[:app_bind_host] = '127.0.0.1'
  web[:app_bind_port] = 6000

  web[:graphics_bind_host] = '0.0.0.0'
  web[:graphics_bind_port] = 6100

  service[:plotter_bind_host] = '0.0.0.0'
  service[:plotter_bind_port] = 6200

  # Bind MySQL publicly, because it'll need to be accessed by the app & worker
  mysql[:bind_host] = '0.0.0.0'
  mysql[:bind_port] = 3306

  memcached[:bind_host] = '0.0.0.0'
  memcached[:bind_port] = 11211

  # Scalr Web/AMQP Host
  app[:influxdb_host] = INFLUXDB_SERVER
  influxdb[:http_bind_host] = '0.0.0.0'

  app[:rabbitmq_host] = WORKER_SERVER
  rabbitmq[:bind_host] = '0.0.0.0'
  rabbitmq[:mgmt_bind_host] = '0.0.0.0'
  proxy[:rabbitmq_upstreams] = [WORKER_SERVER]
<% end %>
